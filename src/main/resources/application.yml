spring:
  application.name: metrics-manager
  task.scheduling.pool.size: 2
  kafka:
    bootstrap-servers: ${KAFKA_HOST}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
      batch-size: ${KAFKA_PRODUCER_BATCH_SIZE:16384}
      properties:
        linger.ms: 50
      acks: 1
      retries: 3
    listener:
      ack-mode: manual_immediate


server:
  port: ${PORT:8080}

kafka:
  producer:
    name: ${KAFKA_OUTPUT_TOPIC:metrics_manager_messages}
    partitions-count: ${KAFKA_OUTPUT_TOPIC_PARTITIONS_COUNT:1}
    replication-factor: ${KAFKA_OUTPUT_TOPIC_REPLICATION_FACTOR:1}
  task-manager-consumer:
    consumer-group-name: metrics_manager
    topic:
      name: ${KAFKA_INPUT_TOPIC:task_manager_messages}
      partitions-count: ${KAFKA_INPUT_TOPIC_PARTITIONS_COUNT:1}
      replication-factor: ${KAFKA_INPUT_TOPIC_REPLICATION_FACTOR:1}

hikari:
  jdbc-url: jdbc:postgresql://${DB_HOST}/${DB_NAME}
  schema: ${DB_SCHEMA:public}
  username: ${DB_USER}
  password: ${DB_PASSWORD}
  driver-class-name: org.postgresql.Driver
